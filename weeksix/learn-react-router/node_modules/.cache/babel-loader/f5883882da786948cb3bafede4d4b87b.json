{"ast":null,"code":"var _jsxFileName = \"/Users/student_113/ga/weeksix/learn-react-router/src/Stocks.js\";\nimport React from 'react';\nvar stocklist = [{\n  \"name\": \"Apple Inc.\",\n  \"symbol\": \"AAPL\",\n  \"lastPrice\": 140.64,\n  \"change\": -0.280000000000001,\n  \"high\": 141.74,\n  \"low\": 140.35,\n  \"open\": 141.5\n}, {\n  \"name\": \"Microsoft Corporation\",\n  \"symbol\": \"MSFT\",\n  \"lastPrice\": 64.98,\n  \"change\": 0.109999999999999,\n  \"high\": 65.45,\n  \"low\": 64.76,\n  \"open\": 65.12\n}, {\n  \"name\": \"Alphabet Inc.\",\n  \"symbol\": \"GOOGL\",\n  \"lastPrice\": 835.14,\n  \"change\": -4.50999999999999,\n  \"high\": 844,\n  \"low\": 829.1,\n  \"open\": 842\n}, {\n  \"name\": \"Facebook, Inc.\",\n  \"symbol\": \"FB\",\n  \"lastPrice\": 140.34,\n  \"change\": 0.810000000000002,\n  \"high\": 141.0244,\n  \"low\": 139.76,\n  \"open\": 140.08\n}, {\n  \"name\": \"Oracle Corporation\",\n  \"symbol\": \"ORCL\",\n  \"lastPrice\": 44.65,\n  \"change\": -0.300000000000004,\n  \"high\": 45.09,\n  \"low\": 44.575,\n  \"open\": 44.91\n}, {\n  \"name\": \"Intel Corporation\",\n  \"symbol\": \"INTL\",\n  \"lastPrice\": 36.16,\n  \"change\": -0.370000000000005,\n  \"high\": 36.78,\n  \"low\": 36.125,\n  \"open\": 36.58\n}];\n\nvar Stocks = function Stocks() {\n  // const jokeComponents = jokesData.map(joke => (\n  //   <Joke key={joke.id} question={joke.question} punchLine={joke.punchLine} />\n  // ));\n  var stocks = stocklist.map(function (stock) {\n    return React.createElement(Stocks, {\n      stock: stock.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Stocks Dashboard\", stocks);\n};\n\nexport default Stocks;","map":{"version":3,"sources":["/Users/student_113/ga/weeksix/learn-react-router/src/Stocks.js"],"names":["React","stocklist","Stocks","stocks","map","stock","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEG,IAAMC,SAAS,GAAG,CACjB;AAAC,UAAQ,YAAT;AAAuB,YAAU,MAAjC;AAAyC,eAAa,MAAtD;AAA8D,YAAU,CAAC,iBAAzE;AAA4F,UAAQ,MAApG;AAA4G,SAAO,MAAnH;AAA2H,UAAQ;AAAnI,CADiB,EAEjB;AAAC,UAAQ,uBAAT;AAAkC,YAAU,MAA5C;AAAoD,eAAa,KAAjE;AAAwE,YAAU,iBAAlF;AAAqG,UAAQ,KAA7G;AAAoH,SAAO,KAA3H;AAAkI,UAAQ;AAA1I,CAFiB,EAGjB;AAAC,UAAQ,eAAT;AAA0B,YAAU,OAApC;AAA6C,eAAa,MAA1D;AAAkE,YAAU,CAAC,gBAA7E;AAA+F,UAAQ,GAAvG;AAA4G,SAAO,KAAnH;AAA0H,UAAQ;AAAlI,CAHiB,EAIjB;AAAC,UAAQ,gBAAT;AAA2B,YAAU,IAArC;AAA2C,eAAa,MAAxD;AAAgE,YAAU,iBAA1E;AAA6F,UAAQ,QAArG;AAA+G,SAAO,MAAtH;AAA8H,UAAQ;AAAtI,CAJiB,EAKjB;AAAC,UAAQ,oBAAT;AAA+B,YAAU,MAAzC;AAAiD,eAAa,KAA9D;AAAqE,YAAU,CAAC,iBAAhF;AAAmG,UAAQ,KAA3G;AAAkH,SAAO,MAAzH;AAAiI,UAAQ;AAAzI,CALiB,EAMjB;AAAC,UAAQ,mBAAT;AAA8B,YAAU,MAAxC;AAAgD,eAAa,KAA7D;AAAoE,YAAU,CAAC,iBAA/E;AAAkG,UAAQ,KAA1G;AAAiH,SAAO,MAAxH;AAAgI,UAAQ;AAAxI,CANiB,CAAlB;;AASH,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB;AACA;AACA;AACI,MAAMC,MAAM,GAAGF,SAAS,CAACG,GAAV,CAAc,UAAAC,KAAK;AAAA,WAAK,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,KAAK,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL;AAAA,GAAnB,CAAf;AAEF,SAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEEH,MAFF,CAFD;AAOH,CAbD;;AAeA,eAAeD,MAAf","sourcesContent":["import React from 'react';\n\n   const stocklist = [\n    {\"name\": \"Apple Inc.\", \"symbol\": \"AAPL\", \"lastPrice\": 140.64, \"change\": -0.280000000000001, \"high\": 141.74, \"low\": 140.35, \"open\": 141.5},\n    {\"name\": \"Microsoft Corporation\", \"symbol\": \"MSFT\", \"lastPrice\": 64.98, \"change\": 0.109999999999999, \"high\": 65.45, \"low\": 64.76, \"open\": 65.12},\n    {\"name\": \"Alphabet Inc.\", \"symbol\": \"GOOGL\", \"lastPrice\": 835.14, \"change\": -4.50999999999999, \"high\": 844, \"low\": 829.1, \"open\": 842},\n    {\"name\": \"Facebook, Inc.\", \"symbol\": \"FB\", \"lastPrice\": 140.34, \"change\": 0.810000000000002, \"high\": 141.0244, \"low\": 139.76, \"open\": 140.08},\n    {\"name\": \"Oracle Corporation\", \"symbol\": \"ORCL\", \"lastPrice\": 44.65, \"change\": -0.300000000000004, \"high\": 45.09, \"low\": 44.575, \"open\": 44.91},\n    {\"name\": \"Intel Corporation\", \"symbol\": \"INTL\", \"lastPrice\": 36.16, \"change\": -0.370000000000005, \"high\": 36.78, \"low\": 36.125, \"open\": 36.58}\n  ]\n\nconst Stocks = () => {\n  // const jokeComponents = jokesData.map(joke => (\n  //   <Joke key={joke.id} question={joke.question} punchLine={joke.punchLine} />\n  // ));\n      const stocks = stocklist.map(stock => (<Stocks stock={stock.name} />))\n\n    return (\n      \n     <div>\n        Stocks Dashboard\n      {stocks}\n      </div>\n    )\n}\n\nexport default Stocks;"]},"metadata":{},"sourceType":"module"}